{"version":3,"sources":["components/charts.jsx","components/records.jsx","components/search.jsx","components/user_panel.jsx","App.js","serviceWorker.js","index.js"],"names":["ResultChart","props","state","data","isLoading","error","this","setState","axios","get","result","results","message","platforms","fake_news","real_news","Object","keys","forEach","key","push","options","title","text","chart","type","series","name","color","credits","xAxis","categories","yAxis","min","max","labels","formatter","value","plotOptions","column","dataLabels","enabled","style","textOutline","y","stacking","tooltip","pointFormat","highcharts","Highcharts","Component","Records","all_data","user_data","refresh","hasValidToken","token","localStorage","getItem","config","headers","Authorization","user_result","past_submissions","map","date_added","fraud","id","platform","sentiment","fraud_probability","url","username_submitted","fraudProbability","Math","round","renderTableData","renderUserData","all_records","className","user_records","Search","onBtnClick","bind","search","loading","modalClosed","e","target","rerenderParentCallback","currentComponent","preventDefault","auth","console","log","Accept","formFields","post","then","response","_results","catch","content","sentiment_color","fraud_color","textTransform","Spinner","animation","variant","placeholder","onChange","inputChangeHandler","call","modal","contentStyle","trigger","onClick","formHandler","close","window","location","reload","UserPanel","isLoggedIn","values","api_url","setItem","removeItem","registration","initialValues","username","password","email","validate","errors","test","verify_password","onSubmit","setSubmitting","setTimeout","isValid","dirty","placeHolder","component","disabled","href","login","register_link","login_link","logOut","App","forceUpdate","src","alt","scrollTargetIds","activeNavClass","offset","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","unregister"],"mappings":"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","file":"static/js/main.165d7dad.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Highcharts from 'highcharts'\nimport HighchartsReact from 'highcharts-react-official'\nimport axios from 'axios';\n\nclass ResultChart extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      isLoading: false,\n      error: null,\n    };\n  }\n \n  async componentDidMount() {\n    this.setState({isLoading : true});\n    try {\n      const result = await axios.get('/api/results');\n      this.setState({ data : result.data.results, isLoading: false});\n    }\n    catch (error) {\n      this.setState({ error, isLoading: false});\n    }\n  }\n\n  render() {\n    const { data, isLoading, error } = this.state;\n\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n\n    if (isLoading) {\n      return <p>Loading ...</p>;\n    }\n\n    // TODO: To refactor\n    let platforms = []; let fake_news = [];  let real_news = [];\n    Object.keys(data).forEach(function(key) {\n      platforms.push(data[key]['platform']);\n      fake_news.push(data[key]['fake_news']);\n      real_news.push(data[key]['real_news']);\n    });\n\n    const options = {\n      title: { text: 'Number of falsehoods in the various social media platforms' },\n      chart : { type: 'column'},\n      series: [ \n        { name: 'Fake News', color: '#FB9039', data: fake_news },\n        { name: 'Real News', color: '#1F3044', data: real_news }\n      ],\n      \n      credits: false,\n      \n      xAxis: { categories: platforms},\n      yAxis: { min: 0, max: 100, title: { text: 'Percentage of Fake/Real News' }, labels: { formatter: function() { return this.value + '%'; } }},\n      \n      plotOptions: { \n        column: { \n          dataLabels: { enabled: true, style: { textOutline: false }, formatter: function() { return this.y; } },\n          stacking: 'percent'\n        }\n      },\n          \n        \n\n      tooltip: {  pointFormat: '({point.percentage:.0f}%)'\n      } \n    }\n    \n    return ( \n      <HighchartsReact\n      highcharts={Highcharts}\n      options={options}\n    />)\n  }\n}\n\nexport default ResultChart;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nclass Records extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      all_data: [],\n      user_data: [],\n      isLoading: false,\n      error: null,\n      refresh: false,\n      hasValidToken: false,\n    };\n  }\n \n  async componentDidMount() {\n    this.setState({isLoading : true});\n    try {\n      const result = await axios.get('/api/history');\n      this.setState({ all_data : result.data, isLoading: false});\n\n      const token = localStorage.getItem('token');\n      if (token !== null) {\n        const config = {\n            headers: { Authorization: `Bearer ${token}` }\n        }\n        var user_result = await axios.get('/api/submitted', config);\n        this.setState({ user_data : user_result.data.past_submissions, isLoading: false});\n        this.setState({ hasValidToken : true})\n      }\n      \n    }\n    catch (error) {\n      this.setState({ error, isLoading: false});\n    }\n  }\n\n  renderTableData() {\n    return this.state.all_data.map((all_data) => {\n       const { date_added, fraud, id, platform, sentiment, fraud_probability, url, username_submitted} = all_data //destructuring\n       const fraudProbability = Math.round(fraud_probability * 100)\n       return (\n          <tr key={id}>\n            <td>{platform}</td>\n             <td>{url}</td>\n             <td>{username_submitted}</td>\n             <td>{sentiment}</td>\n             <td>{fraud} - {fraudProbability}%</td>\n             <td>{date_added}</td>\n          </tr>\n       )\n    })\n  }\n\n  renderUserData() {\n    return this.state.user_data.map((user_data ) => {\n       const { date_added, fraud, id, platform, sentiment, fraud_probability, url, username_submitted} = user_data    //destructuring\n       const fraudProbability = Math.round(fraud_probability * 100)\n       return (\n          <tr key={id}>\n            <td>{platform}</td>\n             <td>{url}</td>\n             <td>{username_submitted}</td>\n             <td>{sentiment}</td>\n             <td>{fraud} - {fraudProbability}%</td>\n             <td>{date_added}</td>\n          </tr>\n       )\n    })\n  }\n\n  refresh() {\n    this.setState ({ refresh: true });\n    this.renderTableData();\n    this.renderUserData();\n  }\n\n  render() {\n    const { isLoading, error } = this.state;\n\n    if (error) {\n      return <p>{error.message}</p>;\n    }\n\n    if (isLoading) {\n      return <p>Loading ...</p>;\n    }\n\n    //TODO: Rewrite this hot garbage\n    var all_records = \n      <div className = 'table-responsive' style = {{\"maxHeight\": \"50%\", \"overflowY\" :\"auto\",\"overflowX\" :\"hidden\"}}>\n        <table id='history' className = 'table-hover table' >\n            <tbody>\n            <tr>\n              {/* Maybe make this dynamic? */}\n              <th>Platform</th>\n              <th>URL</th>\n              {/* <th>Text</th> */}\n              <th>User</th>\n              <th>Sentiments</th>\n              <th>Falsehood (%)</th>\n              <th>Date Added</th>\n            </tr>\n              {this.renderTableData()}\n            </tbody>\n        </table>\n      </div>;\n\n    var user_records = \n      <div className=\"mb-5 w-100\">\n        <h2 className=\"mb-5\">Your past analyses</h2>\n        <div className = 'table-responsive' style = {{\"maxHeight\": \"50%\", \"overflowY\" :\"auto\",\"overflowX\" :\"hidden\"}}>\n          <table id='history' className = 'table-hover table' >\n              <tbody>\n              <tr>\n                {/* Maybe make this dynamic? */}\n                <th>Platform</th>\n                <th>URL</th>\n                {/* <th>Text</th> */}\n                <th>User</th>\n                <th>Sentiments</th>\n                <th>Falsehood</th>\n                <th>Date Added</th>\n              </tr>\n                {this.renderUserData()}\n              </tbody>\n          </table>\n        </div>\n      </div>;\n\n    if (this.state.hasValidToken) {\n      return ( \n        <>\n          {all_records}\n          <hr></hr>\n          {user_records}\n        </>\n      );\n    }\n    else {\n      return (<>{all_records}</>);\n    }\n  }\n}\n\nexport default Records;","import React, { Component } from 'react';\nimport Spinner from 'react-bootstrap/Spinner'\nimport axios from 'axios';\nimport './../App.css';\nimport Popup from \"reactjs-popup\";\n\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n        this.onBtnClick = this.onBtnClick.bind(this);\t\n        this.state = { \n            search: '',\n            results: '',            \n            url: '',\n            fraud: '', \n            loading: false,\n            sentiment: '',\n            modalClosed: false,\n            fraudProbability: '',\n        }\n    }\n\n    inputChangeHandler(e) {\n        this.setState({search: e.target.value });\n    }\n\n    onBtnClick(){\t\n        this.setState({modalClosed: true});\t\n        this.props.rerenderParentCallback();\t\n    }\n\n    formHandler(e) {\n        let currentComponent = this;\n        currentComponent.setState({loading: true});\n        e.preventDefault();\n        const token = localStorage.getItem('token');\n        var auth;\n        //Since /api/evaluate endpoint requires a JWT Header\n        //Have a condition to set JWT header with '${auth}. \"\" -> Guest.\n        if(token == null){\n            auth = \"\";\n        }else{\n            auth = `Bearer ${token}`\n        }\n        console.log(auth)\n        const config = {\n            headers: { \n                'Content-Type': 'application/json',\n                Accept: 'application/json',\n                Authorization: `${auth}`\n                //Authorization: `Bearer ${token}` \n            },\n            data: {},\n        };\n\n        const formFields = this.state;\n        axios.post('/api/evaluate', formFields, config)\n            .then(function(response) {\n                const _results = response.data;\n                currentComponent.setState({loading: false})\n                currentComponent.setState({results: _results.results})\n                currentComponent.setState({url: _results.url})\n                currentComponent.setState({sentiment: _results.sentiment})\n                currentComponent.setState({fraud: _results.fraud})\n                currentComponent.setState({fraudProbability: Math.round(_results.fraud_probability * 100)})\n            })\n            .catch(function(error){\n                console.log(error.response.data)\n                currentComponent.setState({loading: false})\n                currentComponent.setState({results: error})\n            });\n    }\n\n    render() {\n        let content;\n        if (!this.state.results == \"\") {\n            // const sentimentList =  this.state.sentiments;\n            // Let's show certain elements only when used  \n            var sentiment_color;\n            if (this.state.sentiment == 'Positive') {\n                sentiment_color = 'success'\n            } \n            else {\n                sentiment_color = 'danger'\n            }\n\n            var fraud_color;\n            if (this.state.fraud === 'Real') {\n                fraud_color = 'success'\n            } \n            else {\n                fraud_color = 'danger'\n            }\n            if (!this.state.sentiment == '') {\n            content = \n            <div>\n                <hr></hr>\n                    <h3 >Your result</h3> \n                    <hr style = {{ \"margin-top\": \"-0.1em\"}}></hr>\n                    <h4>Link Entered: </h4>\n                    <p>{this.state.url}</p>\n                    <h4>Keywords: </h4>\n                    <p>{this.state.results}</p>\n                    <h4>Falsehood:</h4>\n                    <span style={{textTransform: 'capitalize'}} className ={\"badge p-2 mr-1 mb-3 badge-\" + fraud_color}>{this.state.fraud} - {this.state.fraudProbability}%</span>\n                    <h4>Sentiments: </h4>  \n                    <span className ={\"badge p-2 mr-1 mb-3 badge-\" + sentiment_color}>{this.state.sentiment }</span>\n                    <h4>What do you think?</h4>\n                    <button className = \"btn badge badge-success p-2 mr-1 mb-3\">Excellent!</button>\n                    <button className = \"btn badge badge-warning p-2 mr-1 mb-3\">More work to be done!</button>\n                    <button className = \"btn badge badge-dark p-2 mr-1 mb-3\">Terrible!</button> \n                    <hr></hr>\n            </div>\n            }\n            else {\n                content =  //TODO: Rewrite this - the elements will not render proper if appended to the string, tenaries don't work because of the jsx adjacent element issues\n                <div>\n                    <hr></hr>\n                        <h3 >Your result</h3> \n                        <hr style = {{ \"margin-top\": \"-0.1em\"}}></hr>\n                        <h4>Link Entered: </h4>\n                        <p>{this.state.url}</p>\n                        <h4>Error: </h4>\n                        <p>{this.state.results}</p>\n                        <hr></hr>\n                </div>\n            }\n        }\n        \n        if (this.state.loading) {\n            content = \n            <div>\n                <hr className = \"mb-3\"></hr>\n                <h3 className=\"mb-2\">Your result </h3> \n                <hr style = {{ \"margin-top\": \"-0.1em\"}}></hr>\n                <Spinner animation=\"grow\" variant=\"dark\">\n                <span className=\"sr-only\">Loading...</span>\n                </Spinner>\n            </div>\n        }\n        \n        return(\n            <div>\n                <div className=\"input-group\">\n                        {/* TODO: Add validation of the link */}\n                        <input type=\"text\" name=\"search\" className=\"form-control\" placeholder=\"Validate your results today!\" onChange={(e) => this.inputChangeHandler.call(this, e)} value={this.state.search} />\n                    <div>\n                    <Popup modal\n                       contentStyle = {{ \"maxWidth\": \"500px\", \"maxHeight\": \"80%\", \"overflowY\" :\"auto\",\"overflowX\" :\"hidden\", \"width\": \"80%\", \"text-align\": \"center\" } }\n                       trigger= {<span><button type=\"submit\" className = \"btn btn-primary\" onClick = {this.formHandler.bind(this)}><i className=\"fa fa-search\"></i></button></span> } >\n                        {close => ( \n                            <>{ content } <a \n                                            className=\"close\" \n                                            onClick={(e) => {\n                                                close()\n                                                window.location.reload(false)\n                                            }}>x\n                                            </a></>\n                        )}\n                    </Popup> \n                </div> \n                </div> \n            </div> \n        );\n    }\n  }\n  \n  export default Search; ","import React, { Component } from 'react';\nimport './../App.css';\nimport Popup from \"reactjs-popup\";\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport axios from 'axios';\nimport * as Yup from 'yup';\n\n\nclass UserPanel extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            results: '',\n            loading: false,\n            isLoggedIn: false\n        }\n    }\n    async formHandler(values, type) {\n        let currentComponent = this;\n        currentComponent.setState({loading: true});\n        // e.preventDefault();\n        let api_url;\n        api_url = type == 'login' ? 'login' : 'register';\n        \n        await axios.post('/api/' + api_url, values)\n        .then(function(response) {\n            const _results = response.data;\n            currentComponent.setState({loading: false})\n            currentComponent.setState({results: _results.message})\n            if (api_url === 'login') {\n                localStorage.setItem('token', _results.token);\n                if (_results.token !== '') { localStorage.setItem('loggedIn', true); \n                                            window.location.reload(false)} //To refactor\n            }\n        })\n        .catch(function(error){\n            currentComponent.setState({loading: false})\n            currentComponent.setState({results: error.response.data.message})\n        })\n    }\n\n    componentDidMount() {\n        const loggedIn = localStorage.getItem('loggedIn') === 'true';\n        if (loggedIn == true)\n            this.setState({ isLoggedIn: true});\n        else\n            this.setState({isLoggedIn: false})\n    }\n\n    logOut() {\n        localStorage.setItem('loggedIn', false);\n        localStorage.removeItem('token');\n        window.location.reload(false)\n    }\n    \n    render() {        \n    let registration = \n        <div>\n            <hr className = \"mb-3\"></hr>\n            <h3 className=\"mb-2\">Register</h3> \n            <hr></hr>\n            <Formik\n                initialValues={{ username: '', password: '', email: ''}}\n                validate={values => {\n                    const errors = {};\n                    if (!values.email) {\n                        errors.email = 'Required';\n                    } \n                    \n                    else if (\n                        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n                    ) {\n                        errors.email = 'Invalid email address';\n                    }\n\n                    else if (!values.username) {\n                        errors.username = 'Required'\n                    }\n\n                    else if (values.password !== values.verify_password) {\n                        errors.password = 'Please check your password!'\n                    }\n\n                    return errors;\n                }}\n\n                onSubmit= { (values, { setSubmitting }) => {\n                    setTimeout(() => {\n                        this.formHandler(values, 'register');\n                        setSubmitting(false);\n                    }, 400);\n                }}\n            >\n            {({ isValid, dirty }) => (\n            <div>\n                <Form className =  \"registrationForm\">\n                    <Field type=\"username\" name=\"username\" placeHolder = \"Your username.\" className = \"inputFields\"/>\n                    <ErrorMessage name=\"username\" component=\"span\"/>\n                    <Field type=\"email\" name=\"email\" placeHolder = \"Your email.\" className = \"inputFields\"/>\n                    <ErrorMessage name=\"email\" component=\"div\"/>\n                    <Field type=\"password\" placeHolder = \"Your password.\" name = \"password\" className = \"inputFields\" />\n                    <ErrorMessage name=\"password\" component=\"div\"/>\n                    <Field type=\"password\" placeHolder = \"Verify password.\" name = \"verify_password\" className = \"inputFields\" />\n                    <Popup modal \n                        // contentStyle = {{ \"maxWidth\": \"500px\", \"maxHeight\": \"100%\", \"overflowY\" :\"auto\",\"overflowX\" :\"hidden\", \"width\": \"100%\", \"text-align\": \"center\", \"border-radius\": \"20px\", } }\n                        trigger = {<button type=\"submit\" className = \"inputFields submit\" disabled={!(isValid && dirty)}>Submit</button>}>\n                        {modal => ( \n                            <>{ this.state.results } <a href className=\"close\" onClick={modal}>x</a></>\n                        )}\n                    </Popup>\n                </Form>\n            </div>\n            )}\n            </Formik>\n        <hr></hr>\n        </div>\n    ;\n    \n    let login = \n    <div>\n            <hr className = \"mb-3\"></hr>\n            <h3 className=\"mb-2\">Login</h3> \n            <hr></hr>\n            <Formik\n                initialValues={{ username: '', password: ''}}\n                validate={values => {\n                    const errors = {};\n                    if (!values.username) {\n                        errors.username = 'Required';\n                    } \n                    if (!values.password) {\n                        errors.password = 'Required';\n                    } \n                    return errors;\n                }}\n\n                onSubmit= { (values, { setSubmitting }) => {\n                    //window.location.reload(false)\n                    setTimeout(() => {\n                        this.formHandler(values, 'login');\n                        setSubmitting(false);\n                    }, 700); \n                }}\n            >\n            {({ isValid, dirty }) => (\n            <div>\n                <Form className =  \"registrationForm\"> \n                    <Field type=\"username\" name=\"username\" placeHolder = \"Your username.\" className = \"inputFields\"/>\n                    <ErrorMessage name=\"username\" component=\"div\"/>\n                    <Field type=\"password\" placeHolder = \"Your password.\" name = \"password\" className = \"inputFields\" />\n                    <ErrorMessage name=\"password\" component=\"div\"/>\n                    <Popup modal \n                       trigger = {<button type=\"submit\" className = \"inputFields submit\" disabled={!(isValid && dirty)}>Submit</button>}>\n                        {modal => ( \t   \n                            <>{ this.state.results } <a href className=\"close\" onClick={modal}>x</a></>\t\n                        )}\n                    </Popup>\n                </Form>\n            </div>\n            )}\n            </Formik>\n        <hr></hr>\n        </div>\n    ;\n\n    var register_link = \n        <Popup modal \n                contentStyle = {{ \"maxWidth\": \"500px\", \"maxHeight\": \"80%\", \"overflowY\" :\"auto\",\"overflowX\" :\"hidden\", \"width\": \"100%\", \"text-align\": \"center\" } }\n                trigger= {< a href = \"#register\" className = \"nav-link nav-link-active\">Register</a> } >\n                {modal => ( \n                <>{ registration } <a href className=\"close\" onClick={modal}>x</a></>\n                )}\n        </Popup>\n    ;\n    var login_link = \n        <Popup modal \n                contentStyle = {{ \"maxWidth\": \"500px\", \"maxHeight\": \"80%\", \"overflowY\" :\"auto\",\"overflowX\" :\"hidden\", \"width\": \"100%\", \"text-align\": \"center\" } }\n                trigger= {< a href = \"#login\" className = \"nav-link nav-link-active\">Login</a> } >\n                {modal => ( \n                <>{ login } <a href className=\"close\" onClick={modal}>x</a></>\n                )}\n        </Popup>\n    ;\n\n    if (this.state.isLoggedIn) { \n        return(<><a href = \"#logout\" className = \"nav-link nav-link-active\" onClick = {this.logOut.bind(this)}>Logout</a></>) \n    }\n    else { \n        return(<> {register_link}{login_link} </>); \n    }\n }\n}\n\nexport default UserPanel;","import React, { Component } from 'react';\nimport './App.css';\n// Import charts\nimport ResultChart from './components/charts.jsx';\nimport Records from './components/records.jsx';\nimport Search from './components/search.jsx';\nimport UserPanel from './components/user_panel.jsx';\nimport Highcharts from 'highcharts/highstock'\nimport ScrollspyNav from 'react-scrollspy-nav';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.rerenderParentCallback = this.rerenderParentCallback.bind(this);\t\n  } \n  \n  rerenderParentCallback() {\t\n    this.forceUpdate();\t\n  }\n\n  render() { \n    return (\n    <div className=\"App\">\n      <div className=\"container-fluid p-0\" >\n        <section className=\"site-section p-3 p-lg-5 d-flex align-items-center\" id=\"about\">\n          <div className=\"w-100\">\n            <div className = \"mb-5\"></div>\n            <h1 className=\"mb-3\">pofma.\n              <span className=\"text-primary\">me</span>\n            </h1>\n            <div className=\"subheading mb-5\">\n              a rumour detection platform which seeks to identify falsehoods that are widely witnessed in social media.\n            </div>\n            <div className=\"subheading mb-5\">\n          <p className=\"lead mb-5\">\n            With online falsehood creating distrust and unnecessary panic in our society, a social media rumour detection platform is needed to steer users away from the dissemination of fake news. \n            As a result, a rumour detection platform is created in hopes to address these concerns and reduce the amount of falsehood perpetuated in the world today.\n          </p>\n          </div>\n          <p className=\"subheading mb-5\"></p>\n            <Search rerenderParentCallback={this.rerenderParentCallback}/>\n          <hr className=\"mb-2\"></hr>\n            <div className=\"social-icons\">\n              <a href=\"mailto:hello@lesliecallum.com\">\n                <i className=\"fa fa-envelope\"></i>\n              </a>\n            </div>\n          </div>\n        </section>\n      </div>\n\n      <hr className=\"m-0\"></hr>\n      <section className=\"site-section p-3 p-lg-5 d-flex justify-content-center\" id=\"methodology\">\n      <div className=\"w-100\">\n          <h2 className=\"mb-5\">methodology</h2>\n            <div className=\"site-item d-flex flex-column flex-md-row justify-content-between mb-5\">\n              <div className=\"site-content\">\n                <img src=\"img/concept.png\" alt=\"framework\" className=\"responsive mb-4\"></img>\n                <h4 className=\"mb-4 center\">A React and Flask Framework</h4>\n                <div className = \"subheading m-3\"><h3>the process</h3></div>\n                <hr></hr>\n                <ol className = \"mb-4\">\n                  <li>The web application first sends a request to Flask. </li>\n                  <li>Flask then communicates with the backend python modules with the parameters of the request. </li>\n                  <li>The backend modules then process the requests, and if necessary, pulls the data from the database.  </li>\n                  <li>If data is needed from the database, the data will be returned to the backend python modules. </li>\n                  <li>The backend modules then return the results to flask. </li>\n                  <li>Flask then returns the results in a JSON payload. </li>\n                  <li>The web application proceeds to parse the JSON string and visualise the results. </li>\n                </ol>\n              <div className = \"subheading m-3\"><h3>current limitations</h3></div>\n              <hr></hr>\n              <ol>\n                <li>Only supported social media sites will be scraped and analysed. This is due to the inherent differences when it comes to the web structure. Users, however, can alternatively submit content to be analysed through the same search functionality.  </li>\n                <li>The machine learning algorithm will not be updated on the fly. This is due to the overheads involved when it comes to model generation, and issues with model accuracy would be prevalent should the model be continuously reinforced with its own results. </li>\n                <li>The platform will only support URL(s) that are linked directly to the content. This means that the platform will not scrape for all posts made by a user.  </li>\n              </ol>\n              </div>\n              \n            </div>\n      </div>\n      </section>\n      <hr className=\"m-0\"></hr>\n      <section className=\"site-section p-3 p-lg-5 d-flex align-items-left\" id=\"statistics\">\n        <div className=\"w-100\">\n              <h2 className=\"mb-5\">Statistics</h2>\n              <ResultChart highcharts={Highcharts} />\n          </div>\n      </section>\n      <hr className=\"m-0\"></hr>\n      <section className=\"site-section p-3 p-lg-5 d-flex align-items-left\" id=\"records\">\n        <div className=\"w-100\">\n          <h2 className=\"mb-5\">Past Analyses</h2>\n          <Records />\n        </div>\n      </section>\n      \n    <ScrollspyNav scrollTargetIds ={ ['about', 'methodology', 'statistics', 'records'] } activeNavClass= \"active\" offset={0} ></ScrollspyNav>\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\" id=\"sideNav\">\n        <a className=\"navbar-brand\" href=\"#\">\n        <span className=\"d-block d-lg-none\">pofma checker</span>\n        <span className=\"d-none d-lg-block\">\n            <img className=\"img-fluid img-profile rounded-circle mx-auto mb-2\" alt = \"Logo\" src=\"img/logo.png\"></img>\n        </span>\n        </a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <UserPanel/>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link active\" href=\"#about\">About</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#methodology\">Methodology</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#statistics\">Statistics</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#records\">History</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}